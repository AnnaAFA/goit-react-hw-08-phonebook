{"version":3,"file":"static/js/637.e3e9bd6f.chunk.js","mappings":"2MA+CA,UAzCkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAoBjB,OAnBsBC,EAAAA,EAAAA,IAAYC,EAAAA,KAmBR,SAAC,KAAD,CAAUC,GAAG,eAGrC,4BACE,qDACA,kBAAMC,SAtBW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cAETC,EAAQF,EAAKG,SAASC,UAAUC,MAChCC,EAAWN,EAAKG,SAASI,aAAaF,MAE5Cb,GACEgB,EAAAA,EAAAA,IAAe,CACbN,MAAAA,EACAI,SAAAA,IAIL,EAOG,WACE,8BACE,mCACA,kBAAOG,KAAK,YAAYC,KAAK,QAAQC,UAAQ,QAE/C,8BACE,sCACA,kBAAOF,KAAK,eAAeC,KAAK,WAAWC,UAAQ,EAACC,UAAW,QAEjE,mBAAQF,KAAK,SAAb,0BAIP,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { loginUserThunk } from 'redux/auth/operations';\nimport { selectAuthenticated } from 'redux/auth/selectors';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(selectAuthenticated);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n\n    const email = form.elements.userEmail.value;\n    const password = form.elements.userPassword.value;\n\n    dispatch(\n      loginUserThunk({\n        email,\n        password,\n      })\n    );\n    // console.log(finalUserData);\n  };\n\n  if (authenticated) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <div>\n      <h1>Login Into Your Account</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Email:</p>\n          <input name=\"userEmail\" type=\"email\" required />\n        </label>\n        <label>\n          <p>Password:</p>\n          <input name=\"userPassword\" type=\"password\" required minLength={7} />\n        </label>\n        <button type=\"submit\">Sign In</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","useSelector","selectAuthenticated","to","onSubmit","e","preventDefault","form","currentTarget","email","elements","userEmail","value","password","userPassword","loginUserThunk","name","type","required","minLength"],"sourceRoot":""}