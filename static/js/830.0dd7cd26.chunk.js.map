{"version":3,"file":"static/js/830.0dd7cd26.chunk.js","mappings":"gOAAaA,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAC1BC,EAAwB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,EAC7BC,EAAsB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,E,SCkFxC,EAtEqB,WACnB,IAAMC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BP,GAAWM,EAAAA,EAAAA,IAAYR,GACvBI,GAAYI,EAAAA,EAAAA,IAAYL,GACxBG,GAAQE,EAAAA,EAAAA,IAAYH,GACpBK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHL,GAELG,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACN,EAAeG,IAEnB,IAmBMI,EAAeC,MAAMC,QAAQd,IAAaA,EAASe,OAAS,EAClE,OACE,4BACE,kBAAMC,SAtBW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cAETC,EAAOF,EAAKG,SAASC,YAAYC,MACjCC,EAASN,EAAKG,SAASI,cAAcF,MAE3C,GAAIxB,EAAS2B,MAAK,SAAAC,GAAO,OAAIA,EAAQP,OAASA,CAArB,IACvB,OAAOQ,MAAM,WAAD,OAAYR,EAAZ,oCACdb,GAASsB,EAAAA,EAAAA,IAAgB,CAAET,KAAAA,EAAMI,OAAAA,IAElC,EAUG,WACE,8BACE,kCACA,kBAAOJ,KAAK,cAAcU,KAAK,OAAOC,UAAQ,QAEhD,8BACE,oCACA,kBAAOX,KAAK,gBAAgBU,KAAK,OAAOC,UAAQ,QAElD,mBAAQD,KAAK,SAAb,4BAED7B,IAAa,sCACbE,IAAS,yDAAiCA,MAC3C,wBACGQ,GACCZ,EAASiC,KAAI,SAAAL,GACX,OACE,2BACE,mCAAWA,EAAQP,SACnB,oCAAYO,EAAQH,WACpB,mBACES,QAAS,kBA7BGC,EA6BuBP,EAAQQ,QA3BzD5B,GAAS6B,EAAAA,EAAAA,IAAmBF,IAFF,IAAAA,CA6BH,EACTJ,KAAK,SACL,aAAW,iBAHb,oBAHOH,EAAQQ,GAYpB,QAIV,C","sources":["redux/contacts/selectors.js","pages/ContactsPage.jsx"],"sourcesContent":["export const selectUserContacts = state => state.contacts.contacts;\nexport const selectContactsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthenticated } from 'redux/auth/selectors';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  requestContactsThunk,\n} from 'redux/contacts/operations';\nimport {\n  selectContactsError,\n  selectContactsLoading,\n  selectUserContacts,\n} from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const authenticated = useSelector(selectAuthenticated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authenticated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authenticated, dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact ${name} is already in the contact list`);\n    dispatch(addContactThunk({ name, number }));\n    // console.log(finalUserData);\n  };\n\n  const handleDeleteContact = contactId => {\n    // console.log(contactId);\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input name=\"contactName\" type=\"text\" required />\n        </label>\n        <label>\n          <p>Number:</p>\n          <input name=\"contactNumber\" type=\"text\" required />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops, some error occurred... {error}</p>}\n      <ul>\n        {showContacts &&\n          contacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>Name: {contact.name}</h3>\n                <p>Number: {contact.number}</p>\n                <button\n                  onClick={() => handleDeleteContact(contact.id)}\n                  type=\"button\"\n                  aria-label=\"Delete contact\"\n                >\n                  &times;\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectUserContacts","state","contacts","selectContactsLoading","isLoading","selectContactsError","error","authenticated","useSelector","selectAuthenticated","dispatch","useDispatch","useEffect","requestContactsThunk","showContacts","Array","isArray","length","onSubmit","e","preventDefault","form","currentTarget","name","elements","contactName","value","number","contactNumber","some","contact","alert","addContactThunk","type","required","map","onClick","contactId","id","deleteContactThunk"],"sourceRoot":""}