{"version":3,"file":"static/js/750.1a6df084.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectUserContacts = state => state.contacts.contacts;\nexport const selectContactsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectUserContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.form`\n  border-radius: 20px;\n  margin: auto;\n  margin-top: 50px;\n  width: 300px;\n  padding: 40px;\n  background: linear-gradient(30deg, #8b59e7 10%, #4ec7e6 80%);\n`;\n\nexport const LabelWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const ContactButton = styled.button`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  padding: 10px 20px;\n  border: 0;\n  margin: 0 auto;\n  margin-top: 10px;\n  border-radius: 50px;\n  background-color: white;\n  display: inline-block;\n  text-decoration: none;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: #4ec7e6;\n    border-color: black;\n  }\n`;\n\nexport const InputStyleContact = styled.input`\n  padding: 7px;\n  border-radius: 10px;\n  width: 300px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/operations';\nimport { selectUserContacts } from 'redux/contacts/selectors';\nimport {\n  ContactButton,\n  FormWrapper,\n  InputStyleContact,\n  LabelWrapper,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const onChangeValue = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    )\n      return alert(`Contact ${name} is already in the contact list`);\n    dispatch(addContactThunk({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <>\n      <FormWrapper onSubmit={handleSubmit}>\n        <LabelWrapper>\n          <span>Name</span>\n          <InputStyleContact\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash, and spaces. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={onChangeValue}\n          />\n        </LabelWrapper>\n        <LabelWrapper>\n          <span>Number</span>\n          <InputStyleContact\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={onChangeValue}\n          />\n        </LabelWrapper>\n\n        <ContactButton type=\"submit\">Add contact</ContactButton>\n      </FormWrapper>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListWrapper = styled.div`\n  margin-top: 20px;\n  margin-bottom: 50px;\n  padding: 40px;\n  background: linear-gradient(30deg, #8b59e7 10%, #4ec7e6 80%);\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 0;\n`;\n\nexport const ListButton = styled.button`\n  padding: 10px;\n  background-color: #4ec7e6;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: #8b59e7;\n  }\n`;\n\nexport const ListItem = styled.li`\n  border-radius: 10px;\n  align-items: baseline;\n  display: flex;\n  flex-direction: row;\n  background-color: white;\n  gap: 20px;\n  padding: 15px;\n  margin: 0;\n  font-size: 20px;\n  justify-content: space-between;\n`;\n\nexport const Name = styled.h3`\n  margin: 0;\n`;\n\nexport const NumberStyle = styled.p`\n  margin: 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport {\n  List,\n  ListButton,\n  ListItem,\n  ListWrapper,\n  Name,\n  NumberStyle,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n  return (\n    <ListWrapper>\n      <List>\n        {showContacts &&\n          contacts.map(contact => (\n            <ListItem key={contact.id}>\n              <Name>{contact.name}</Name>\n              <NumberStyle>{contact.number}</NumberStyle>\n              <ListButton\n                onClick={() => handleDeleteContact(contact.id)}\n                type=\"button\"\n                aria-label=\"Delete contact\"\n              >\n                &times;\n              </ListButton>\n            </ListItem>\n          ))}\n      </List>\n    </ListWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.form`\n  border-radius: 20px;\n  margin: auto;\n  margin-top: 20px;\n  width: 300px;\n  padding: 40px;\n  background: linear-gradient(30deg, #8b59e7 10%, #4ec7e6 80%);\n`;\n\nexport const FilterTitle = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const InputStyleFilter = styled.input`\n  padding: 7px;\n  border-radius: 10px;\n  width: 300px;\n`;\n\nexport const StyleSpan = styled.span`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterReducer';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport {\n  FilterForm,\n  FilterTitle,\n  InputStyleFilter,\n  StyleSpan,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilterChange = e => {\n    const filterValue = e.target.value.toLowerCase();\n\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <>\n      <FilterForm>\n        <FilterTitle>\n          <StyleSpan>Find contact by name</StyleSpan>\n          <InputStyleFilter\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={onFilterChange}\n          />\n        </FilterTitle>\n      </FilterForm>\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthenticated } from 'redux/auth/selectors';\nimport { requestContactsThunk } from 'redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const authenticated = useSelector(selectAuthenticated);\n\n  useEffect(() => {\n    dispatch(requestContactsThunk());\n  }, [authenticated, dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <div>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectUserContacts","state","contacts","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","FormWrapper","styled","LabelWrapper","ContactButton","InputStyleContact","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onChangeValue","e","target","value","reset","onSubmit","preventDefault","some","alert","addContactThunk","type","pattern","title","required","onChange","ListWrapper","List","ListButton","ListItem","Name","NumberStyle","ContactList","showContacts","Array","isArray","length","map","onClick","contactId","id","deleteContactThunk","FilterForm","FilterTitle","InputStyleFilter","StyleSpan","Filter","filterValue","setFilter","authenticated","selectAuthenticated","useEffect","requestContactsThunk"],"sourceRoot":""}